---
layout: post
title: "高级路由之OSPF协议"
comments: true
share: true
tags: 计算机高级网络学习
---
### OSPF概述
- IGP内部网关协议中应用最广、性能最优的一个协议
- 使用Dijkstra算法，在网络中有对应SPT和SPF树
- 可在大型网络中使用
- 支持VLSM
- 使用带宽作为度量值
- 收敛速度快

#### 单区域OSPF
- RouterID:32位无符号整数，路由器的唯一标识，在整个自治系统唯一。
- 协议号:89
- TTL=1:通常OSPF报文不转发，只被传递一条，但虚连接除外。
- TYPE数据包类型
    - Hello:与邻居*建立*和*维护*毗邻关系
    - 数据库描述包DD:描述一个OSPF路由器的链路状态数据库内容。
    - 链路状态请求LSR:请求相邻路由器发送其链路状态数据库中的具体条目
    - 链路状态更新LSU:向邻居路由器发送链路状态通告
    - 链路状态确认LSA:确认收到了邻居路由器的LSU
- DR/BDR简介  
   &#160; &#160; &#160; &#160;在广播网和NBMA网络中，任意两台路由器之间都要交换路由信息。如果网络中有n台路由器，则需要建立n(n-1)/2个邻接关系。这使得任何一台路由器的路由变化都会导致多次传递，浪费了带宽资源。为解决这一问题，OSPF协议定义了指定路由器DR（Designated Router），所有路由器都只将信息发送给DR，由DR将网络链路状态发送出去。   
&#160; &#160; &#160; &#160;如果DR由于某种故障而失效，则网络中的路由器必须重新选举DR，再与新的DR同步。这需要较长的时间，在这段时间内，路由的计算是不正确的。为了能够缩短这个过程，OSPF提出了BDR（Backup Designated Router，备份指定路由器）的概念。   
&#160; &#160; &#160; &#160;BDR实际上是对DR的一个备份，在选举DR的同时也选举出BDR，BDR也和本网段内的所有路由器建立邻接关系并交换路由信息。当DR失效后，BDR会立即成为DR。由于不需要重新选举，并且邻接关系事先已建立，所以这个过程是非常短暂的。当然这时还需要再重新选举出一个新的BDR，虽然一样需要较长的时间，但并不会影响路由的计算。   
&#160; &#160; &#160; &#160;DR和BDR之外的路由器（称为DR Other）之间将不再建立邻接关系，也不再交换任何路由信息。这样就减少了广播网和NBMA网络上各路由器之间邻接关系的数量  
- __*DR带来的变化*__
    - 同步的次数减少了（O（n）），减少了带宽的利用
    - 路由器的角色：DR、BDR、DROther
    - 路由器间的关系：Unknown、Neighbor、Adjacent


### OSPF的运行步骤
- 建立路由器毗邻关系：通过五个数据包的来回传递
- 选举DR和BDR，选举过程类比如下
   - 登记选民  
      本网段内的OSPF路由器(本村内的18岁以上公民)
   - 登记候选人    
      本网段内的priority>0的OSPF路由器(本村内的30岁以上公民，且在本村居住三年以上)
   - 竞选演说  
      所有的priority>0的OSPF路由器都认为自己是DR(所有的候选人都自认为应该当村长)
   - 投票  
     选priority值最大的，若priority值相等，选Router ID最大的(选年纪最大，若年龄相等，按姓氏笔划排序)  
     
   <font color='red' size=5>注意</font>
   <ol>  
    <li>选举制 </li>
DR是路由器选出来的，而非人工指定的
<li>终身制</li>
DR一旦当选，除非路由器故障，否则不会更换
<li>世袭制</li>
DR选出的同时，也选出BDR，DR故障后，由BDR接替DR成为新的DR
</ol>

- 发现路由
   - 在exstart状态下交换DD报文
   - 比较自己的数据库与收到的摘要是否相同
   - 不相同，则请求完整LSA信息
- 选择最佳路由
   - SPF算法:即Dijkstra算法
   - 负载均衡
- 维护路由信息
   - 触发更新，LSU
   - Hello分组发送的时间间隔：缺省10秒
   - Hello分组的失效间隔：缺省40秒
   - 即使没有拓扑变化，LSA在条目过期（缺省30分钟）后，发送LSU，通告链路存活
 

### OSPF路由器类型
- 内部路由器  --- 路由器所有接口都在一个区  

- 主干路由器 ---  所有接口都在主干区域的路由器

- 区域边界路由器(ABR) ---路由器接口分属不同区域

- 自治域边界路由器 (ASBR) --- 路由器至少有一个接口不属于本自治域/OSPF. 

### OSPF状态
[八种状态详解](http://www.360doc.com/content/12/1228/14/3405077_256782292.shtml)

- Down
- Init（初始）
- Two-way（双向）
- ExStart（准启动）
- Exchange（交换）
- Loading（加载）
- Full adjacency（全毗邻） 

### OSPF优缺点和解决方案
- 优点
   - 克服了路由自环：路由计算的算法是SPF，计算的结果是一棵树，路由是树上的叶子节点，从根节点到叶子节点是单向不可回复的路径。
区域之间通过规定骨干区域避免
   - 收敛速度快：能够在最短的时间内将路由变化传递到整个自治系统
   - 提出区域（area）划分的概念，将自治系统划分为不同区域后，通过区域之间的对路由信息的摘要，大大减少了需传递的路由信息数量。也使得路由信息不会随网络规模的扩大而急剧膨胀。
   - 将协议自身的开销控制到最小
- 缺点
   - 配置相对复杂。由于网络区域划分和网络属性的复杂性，需要网络分析员有较高的网络知识水平才能配置和管理OSPF网络。
   - 路由负载均衡能力较弱。OSPF虽然能根据接口的速率、连接可靠性等信息，自动生成接口路由优先级，但通往同一目的的不同优先级路由，OSPF只选择优先级较高的转发，不同优先级的路由，不能实现负载分担。只有相同优先级的，才能达到负载均衡的目的，不象EIGRP那样可以根据优先级不同，自动匹配流量。
   
### OSPF虚连接
- 虚连接的意义   
  由于网络的拓扑结构复杂，有时无法满足每个区域必须和骨干区域直接相连的要求，如图所示。为解决此问题，OSPF  提出了虚连接的概念。虚连接是指在两台 ABR  之间，穿过一个非骨干区域（转换区域——transit Area），建立的一条逻辑上的连接通道。可以理解为两台 ABR  之间存在一个点对点的连接。“逻辑通道”是指两台 ABR  之间的多台运行 OSPF  的路由器只是起到一个转发报文的作用（由于协议报文的目的地址不是这些路由器，所以这些报文对于他们是透明的，只是当作普通的 IP  报文来转发），两台 ABR  之间直接传递路由信息。这里的路由信息是指由 ABR  生成的 type3 的 LSA，区域内的路由器同步方式没有因此改变。 注意：如果自治系统被划分成一个以上的区域，则必须有一个区域是骨干区域，并且保证其它区域与骨干区域直接相连或逻辑上相连，且骨干区域自身也必须是连通.
- 虚连接的作用  
 使物理上与骨干区不直接相连的区域在逻辑上和骨干区相连

### OSPFV3和OSPFV2
- OSPFv3保留了OSPFv2的基本机制
   - 网络类型和接口类型
   - 邻居发现和邻接（毗邻）建立机制
   - 接口状态机和邻居状态机
   - 基于LSDB计算路由
   - LSA老化更新机制
   - 泛洪机制(Flooding mechanism)
   - 共五种协议报文: Hello, DD, LSR, LSU, LSAck
- OSPFv3做出的变化
   - 基于链路运行
      - 在OSPFv2中，协议的运行是基于子网的，邻居之间形成邻接关系的条件之一就是两端的IP地址属于同一网段而且掩码相同.
      - 而在OSPFv3中，协议基于链路运行，与具体的IPv6地址、前缀分离开来，即使同一链路上的不同节点具有不同的IPv6地址时，协议也可以正常运行
   - 取消了编址语义
      - 在OSPFv2中，协议分组和LSA中的许多字段都是来自于网络上的某个IP地址，或掩码，或某个IP子网号。严重依赖IPv4。
      - 在OSPFv3中，取消了上述编址性语义，而只保留协议运行必须的核心内容。ID依然保留32位，但只是一个编号，不再包含地址信息.
   - 链路本地地址的使用
      - 在OSPFv2中，每一个运行OSPF的接口都必须有一个全局的IPv4地址，协议的运行和路由的计算都依赖于它。
      - 在IPv6中，每个接口都会分配本地链路地址（link-local address），OSPFv3使用了这个本地链路地址作为协议分组发送的源地址（虚连接除外），而且使用它作为路由的下一跳。
      - 可以节省大量的全局地址，同时可以说协议的运行独立于IPv6，可以方便的扩展用于多种协议的路由。
   - 使用专门的LSA来发布路由前缀信息
      - 新增加了Intra-Area-Prefix-LSA，用于传递区域内路由前缀
      - 新增加了Link-LSA，用于传递链路范围内的IPv6前缀
- (重要)__*OSPFv3具有的特点__* 
   - 结构更加清晰
     - 取消了协议报文的验证字段
     - 明确的LSA泛滥范围
   - 更好的可扩展性和适应性
     - 在OSPFv2中，不同的实例必须运行在不同的链路上
     - 在OSPFv3中，明确的提供了对多实例的支持，在协议报文中增加了“instance ID”字段，同时在报文接收时对该字段进行判断，只有实例号匹配的报文才会处理，否则丢弃。这样，即使是同一链路也可以运行多个OSPF实例了，而且互相独立运行不会影响
