---
layout: post
title: "基于状态图表示的搜索技术"
comments: true
share: true
tags: 人工智能学习
---

###问题求解框架
- 叙述性知识:描述问题初始状态
- 过程性知识:描述状态变换
- 控制性知识:描述如何在当前状态下选择合适操作的知识

###知识的表示方法
- 状态空间图、与或图、谓词逻辑、产生式、框架、语义网络、关系图

###图搜索技术
- 搜索，即为求解，搜索过程就是从图中初始节点出发，沿着相连的边试探着前进，寻找目标节点或可解节点的过程。
- 而搜索树，也叫搜索空间，即为搜索过程中经过的节点和边，按原图的连接关系，便会构成一个树型的有向图。它是一个搜索过程中的搜索轨迹。

- __*搜索策略*__
   - 盲目搜索:无向导的搜索，也称穷举搜索。搜索时不参考与具体待求解问题相关的任何信息，只是按预先设定的顺序逐个考察节点。盲目搜索与问题无关，具有通用性。
       - 算法中使用的数据结构
          - open表:专门登记已经生成但还没有考察的节点，即待考察节点。
          - closed表:用来记录考察过的节点以及节点之间的关系；它存放的就是一定搜索策略下的搜索树。
       - 广度优先搜索:open表是队列，closed表是顺序表,横向搜索，策略完备，效率低。
       - 深度优先搜索:open表是堆栈,纵向搜索，不能保证找到最优解。衍生算法:有界深度优先搜索、可变界深度优先搜索、
   - 启发式搜索:利用“启发性信息”作为导航的搜索过程。  
对于较大或无限状态空间问题，盲目搜索效率太低，所以在实际当中往往是不可行的。启发式搜索广泛地应用于实际问题求解中，如博弈、机器学习、数据挖掘、智能检索等
       - 全局择优搜索
       - 局部择优搜索
       - [A*算法](http://blog.csdn.net/b2b160/article/details/4057781)

###状态空间图
- 显式状态空间图：表示了问题所有可能的状态及状态之间的关系，这种表示方式称为显式状态空间图，或称为状态空间图的显示表示。如翻转钱币问题和修道士与野人问题。

- 隐式状态空间图：利用有关状态描述和状态转换（操作）的知识定义的状态空间图。在计算机中仅存储描述问题状态及操作的有关知识，包括该问题的各状态分量的取值情况、分量之间的约束条件、开始状态、终止状态，以及全部操作的条件和动作等。隐式状态空间图也称为是状态空间图的隐式表示或隐式图。如重排九宫问题和旅行商问题(TSP)。

###与或图表示及搜索技术(不太明白)
- 与或图:将问题细分为多个问题去求解。例如四边形全等证明。
- 与或树:盲目搜索与启发式搜索。

###博弈树及搜索技术
- 博弈树的特点  
  类比做下棋，我方走棋是或节点，对方走棋是与节点，与或节点交替执行，这就是它的特点。
- 博弈树搜索
   - 二人零和:指对弈双方利益完全冲突，利益之和永远为零。囚徒困境是反例。
   - 全信息:对弈的格局和历史是公开的。
   - 非偶然性:对弈双方理智选择，即在采取行动前，都要根据自己的静态估值函数(启发函数)进行得失分析，选取对自己最有利而对对方最不利的对策，不存在"碰运气"式的随机因素。

- 极大极小化分析
   - 静态估值:为了找到当前的最佳走步，一般要向前看几个甚至多个回合。为此，需要根据问题的特性信息（来自于博弈者的经验）定义一个静态估值函数，估价当前博弈树末端结点的得分，称为格局的静态估值
   - 倒推值：当末端结点的估值计算出来后，再向上推算出各结点的得分，称为倒推值。
   - 极小极大化分析法：对与结点求极小值、对或结点求极大值计算各先辈结点倒推值的方法。
   - 用极小极大分析方法求最佳走步的具体过程
      - 首先，按扩展深度限制（回合数）扩展结点，对末端结点求静态估值
      - 然后，对内部结点按极小极大化分析方法求倒推值
      - 最后，根据根结点的倒推值决定一个最佳走步
      - 重复上面分析过程，直到扩展到终局
      - 每扩展一次，对内部结点都用新的倒推值代替原来的静态估值或原来的倒推值。如果一个行动方案能获得较大的倒推值，则它就是当前最好的行动方案。
    ![极大极小分析法](http://hutuxianren.github.io/_posts/images/jidajixiao.png)
   